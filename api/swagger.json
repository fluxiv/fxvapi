{
    "components": {
        "schemas": {
            "postUser" : {
                "type": "object",
                "properties": {
                    "Name": {
                        "type": "string"
                    },
                    "Birthday": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Password": {
                        "type": "string"
                    },
                    "isPremium": {
                        "type": "number"
                    },
                    "terms": {
                        "type":"number"
                    }
                }
            }
        }
    },
    "openapi": "3.0.0",
    "info": {
        "title": "FLUXIV API",
        "summary": "This api will be used for every Fluxiv service",
        "license": {
             "name": "GPLv3",
             "url": "https://www.gnu.org/licenses/quick-guide-gplv3.html"
        },
        "version": "0.10"
    },

    "basePath": "/api",
    "schemes": [
      "http",
      "https"
    ],
    "securityDefinitions": {
      "Bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },

    "servers": [
        {
            "url": "http://localhost:4040/",
            "description": "API em local"
        }
    ],
    "paths": {
        "/getImage": {
            "get": {
                "summary": "return images",
                "description": "return any image stored in API",
                "tags": ["User"],
                "parameters": [
                    {                    
                        "name": "photo",
                        "in" : "query",
                        "description": "Path to file image",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "content": {
                            "image/*": {
                                "schema": {
                                    "type": "string",
                                    "example": "/uploads/default/avatar-image.jpg"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/postUser": {
            "post": {
                "summary": "User registration",
                "description": "This route will be responsible for registering a new user",
                "tags": ["User"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/postUser"
                            }
                        }
                    }
                },
                "responses":{
                    "201": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/postUser"
                                },
                                "examples": {
                                    "postUser": {
                                        "value": {
                                            "Name": "Igor Suzart",
                                            "Birthday": "08/05/1998",
                                            "Email": "igorsuzart@fluxiv.com",
                                            "Password": "T3ste#1234",
                                            "isPremium": "0",
                                            "terms": "0"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "msg": {
                                            "type": "string",
                                            "description": "An error message."
                                        },
                                        "error": {
                                            "type": "object",
                                            "description": "The error object."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/loginUser": {
            "post": {
                "summary": "Login user",
                "description": "Login user",
                "tags":["User"],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
            
        "/user/getUserById": {
            "get": {
              "summary": "Get user by ID",
              "description": "Retrieves a user by ID",
              "tags":["User"],
              "security": [
                {
                  "Bearer": []
                }
              ],
              "parameters": [
                {
                  "name": "id",
                  "in": "query",
                  "required": true,
                  "type": "string"
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "schema": {
                    "$ref": "#/definitions/User"
                  }
                },
                "400": {
                  "description": "Bad Request",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                },
                "401": {
                  "description": "Unauthorized",
                  "schema": {
                    "$ref": "#/definitions/Error"
                  }
                }
              }
            }
          },
        
            "definitions": {
                "User": {
                    "type": "object",
                    "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                    }
                },
                "Error": {
                    "type": "object",
                    "properties": {
                    "msg": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    }
                    }
                }
            },

            "/putTerms": {
                "put": {
                    "description": "Updates the terms of a given user",
                    "parameters": [
                        {
                            "name": "id",
                            "description": "Unique user ID",
                            "tags":["User"],
                            "in": "query",
                            "required": true,
                            "type": "integer"
                        },
                        {
                            "name": "bool",
                            "description": "Boolean value of the terms",
                            "in": "query",
                            "required": true,
                            "type": "boolean"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "OK"
                        },
                        "400": {
                            "description": "Bad Request"
                        }
                    }
                }
            }
    }
}
